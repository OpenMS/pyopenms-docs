name: Building latest pyopenms package

on:
  push
jobs:

  build-lnx:
    runs-on: ubuntu-latest
    container: openms/manylinux:latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v1.9
      with:
        cmake-version: '3.20.x'
    - name: Clone OpsnMS
      run: |
        git clone https://github.com/OpenMS/OpenMS.git

    - name: Build on manylinux2014
      shell: bash
      run: |
            ## Do not load shared objects from root folder oft he package at import. Auditwheel handles dependencies.
            patch -p0 $GITHUB_WORKSPACE/OpenMS/src/pyOpenMS/pyopenms/__init__.py < $GITHUB_WORKSPACE/OpenMS/src/pyOpenMS/dist-scripts/manylinux.patch
            # build an array based the python versions in /opt/python
            py_paths=()
            for PYBIN in /opt/python/cp*
            do
              echo $PYBIN
              py_paths+=("$PYBIN")
            done
            # use the latest 3 python versions similar to macOS, windows
            for i in 0{3..3}
            do
              PYBIN="${py_paths[${#py_paths[@]}-i]}"
              "$PYBIN/bin/pip" install -U Cython
              "$PYBIN/bin/pip" install -U setuptools
              "$PYBIN/bin/pip" install -U wheel==0.31.1
              "$PYBIN/bin/pip" install -U numpy
              "$PYBIN/bin/pip" install -U nose
              "$PYBIN/bin/pip" install -U autowrap
            done
            mkdir -p $GITHUB_WORKSPACE/data/wheelhouse/
            mkdir -p $GITHUB_WORKSPACE/data/wheelhouse/before_fix/
            LD_OLD_LIBRARY_PATH=$LD_LIBRARY_PATH
            mkdir openms-build
            cd openms-build
            cmake -DCMAKE_BUILD_TYPE="Release" -DOPENMS_CONTRIB_LIBS="/contrib-build/" -DCMAKE_PREFIX_PATH="/contrib-build/" $GITHUB_WORKSPACE/OpenMS
            make -j4 OpenMS
            # compile and configure OpenMS
            for i in 0{3..3}
            do
              PYBIN="${py_paths[${#py_paths[@]}-i]}"
              # configure
              cmake -DOPENMS_CONTRIB_LIBS="/contrib-build/" -DCMAKE_PREFIX_PATH="/contrib-build/" -DPYOPENMS=On -DPYTHON_EXECUTABLE:FILEPATH=$PYBIN/bin/python $GITHUB_WORKSPACE/OpenMS
              make -j4 pyopenms
              pushd pyOpenMS
                # remove the libraries as auditwheel will take care of linked libs
                rm -rf pyopenms/lib*
                rm -rf build/lib*/pyopenms/lib*
                find . -name "pyopenms*.so" -exec rm -rf {} \; # not sure if that works here?! 
                # create wheel without libraries
                "$PYBIN/bin/pip" wheel . -w wheelhouse_tmp
              popd
            done
            # ensure auditwheel can find the libraries
            export LD_LIBRARY_PATH=$LD_OLD_LIBRARY_PATH:`pwd`/lib
            # strip the libraries before repairing
            strip --strip-all lib/libOpenMS.so
            strip --strip-all lib/libOpenSwathAlgo.so
            pushd pyOpenMS
              # Bundle stripped plus external shared libraries into the wheels
              for whl in wheelhouse_tmp/pyopenms*.whl; do
                auditwheel repair "$whl" -w wheelhouse/
              done
              
              mv wheelhouse/* $GITHUB_WORKSPACE/data/wheelhouse/
            popd
    - name: Commit files
      run: |
        git config --local user.email "rahulagrawal799110@gmail.com"
        git config --local user.name "rahul799"
        git add data/wheelhouse/*
        git commit -m "ipynb notebooks generated" -a
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: "master+ipynb"
        force: true